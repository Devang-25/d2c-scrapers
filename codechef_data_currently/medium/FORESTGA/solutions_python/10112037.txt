from math import ceil
import sys

trees = []

class Tree:

	def __init__(self,initialheight,growth,mincutmonths,mincutwood):
		self.initialheight = initialheight
		self.growth = growth
		self.mincutmonths = mincutmonths
		self.mincutwood = mincutwood

	def __lt__(self,other):
		if self.mincutmonths < other.mincutmonths:
			return True
		elif self.mincutmonths==other.mincutmonths:
			return self.mincutwood > other.mincutwood
		else:
			return False

line = raw_input()
inputlist = line.split(" ")
n = int(inputlist[0])
w = int(inputlist[1])
l = int(inputlist[2])

for i in range(0,n):
	line = raw_input()
	inputlist = line.split(" ")
	h = int(inputlist[0])
	r = int(inputlist[1])
	days = ceil(float(l-h)/r)
	wood = h+ days * r
	trees.append(Tree(h,r,days,wood))
trees.sort()

# print the tree
'''
for t in trees:
	print str(t.initialheight) + " " + str(t.growth) + " " + str(t.mincutmonths) + " " + str(t.mincutwood)
'''
if w<=0:
	print 0
else:
	totalmonths = 0
	growthsum = 0
	index = 0
	# take the first
	totalmonths = totalmonths + trees[index].mincutmonths
	w = w - trees[index].mincutwood
	growthsum = growthsum + trees[index].growth
	index=1

	while w>0:
		if index >=n:
			totalmonths = totalmonths + ceil(float(w)/growthsum)
			w=0
		else:
			d1 = ceil(float(w)/growthsum)
			temp1 = trees[index].mincutmonths-totalmonths
			temp2 = trees[index].mincutwood
			for i in range(0,index):
				temp2 = temp2 + temp1*trees[i].growth
			if w - temp2 >0:
				temp1 = temp1 + float(w-temp2)/(growthsum+trees[index].mincutmonths)
			if d1 < temp1:
				totalmonths = totalmonths + d1
				w=0
			else:
				totalmonths = totalmonths + trees[index].mincutmonths-totalmonths
				growthsum = growthsum + trees[index].growth
				index = index + 1
				w = w - temp2
	print int(totalmonths)