#include <bits/stdc++.h>
#define ll long long
#define mno 1000000007
#define inf LLONG_MAX
using namespace std;
long int st[10000007][24];/*
inline void constst(ll N)	//to construct sparse tree
{
	ll i,j;
//	for(i=0;i<N;i++)
//		st[i][0]=i;
	for(j=1;(1<<j)<=N;j++)
	{
		for(i=0;i+(1<<j)-1<N;i++)
		{
			if(st[i][j-1] <= st[i+(1<<(j-1))][j-1])
				st[i][j]=st[i][j-1];
			else
				st[i][j]=st[i+(1<<(j-1))][j-1];
		}
	}
}*/
ll query(ll l,ll r)
{
	//ll ans;
	ll k=( log(r-l+1)/log(2) );
	return min(st[l][k] , st[r-(1<<k)+1][k]);
	//	ans=st[l][k];
	//else
	//	ans=st[r-(1<<k)+1][k];
	//return ans;
}/*
inline void consarr(ll N)
{
	ll a,b,c,d,e,f,r,s,t,m,x,ko;
	//cin.sync_with_stdio(0);
	//cin.tie(0);
	cin>>a>>b>>c>>d>>e>>f>>r>>s>>t>>m>>st[0][0];
	ko=t;
	for(x=1;x<N;x++)
	{
		ko=(ko%s * t%s)%s;
		if( ko  <= r )        
			st[x][0] = ( ((a%m) * st[x-1][0] * st[x-1][0] ) + ((b%m) * st[x-1][0]) + c%m) % m;
		else
			st[x][0] = ( ((d%m) * st[x-1][0] * st[x-1][0] ) + ((e%m) * st[x-1][0]) + f%m) % m;
	}
}*/
int main()
{
	ll N,i,Q,K,L,R,sum=0,pro=1,j;
	cin.sync_with_stdio(0);
	cin.tie(0);
	cin>>N>>K>>Q;
	ll a,b,c,d,e,f,r,s,t,m,x,ko;
	cin>>a>>b>>c>>d>>e>>f>>r>>s>>t>>m>>st[0][0];
	ko=t;
	for(x=1;x<N;x++)
	{
		ko=(ko%s * t%s)%s;
		if( ko  <= r )        
			st[x][0] = ( ((a%m) * st[x-1][0] * st[x-1][0] ) + ((b%m) * st[x-1][0]) + c%m) % m;
		else
			st[x][0] = ( ((d%m) * st[x-1][0] * st[x-1][0] ) + ((e%m) * st[x-1][0]) + f%m) % m;
	}
	for(j=1;(1<<j)<=N;j++)
	{
		for(i=0;i+(1<<j)-1<N;i++)
		{
			if(st[i][j-1] <= st[i+(1<<(j-1))][j-1])
				st[i][j]=st[i][j-1];
			else
				st[i][j]=st[i+(1<<(j-1))][j-1];
		}
	}
	//for(i=0;i<N;i++)
	//	cout<<st[i][0]<<" ";
	//cout<<endl;
	ll L1, La, Lc, Lm, D1, Da, Dc, Dm;
	cin>>L1>>La>>Lc>>Lm>>D1>>Da>>Dc>>Dm;
	for(i=0;i<Q;i++)
	{
		L1 = ( (La * L1) + Lc)%Lm;
	    D1 = ( (Da * D1) + Dc)%Dm; 
		L = L1 + 1;
		R = min(L + K - 1 + D1, N);
		//cout<<L<<" "<<R<<endl;
		ll x=query(L-1,R-1);
		//cout<<x;
		sum+=x;
		pro=(pro * x)%mno;		
	}
	cout<<sum<<" "<<pro<<endl;
}