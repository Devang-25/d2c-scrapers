def possible(N = 0,B = 0,G = 0):
    if N % 2 == 0:
        if B == G:
            return 2
        else:
            return 0
    if B - G == 1 or G - B == 1:
        return 1
    return 0
t = input()
S = []
def cost(M = 0,TP = 0):
    buf = []
    if M == 0:
        buf.append('B')
        buf.append('G')
    else:
        buf.append('G')
        buf.append('B')
    v1 = []
    v2 = []
    i = 0
    for i in range(0 ,len(S)):
        if S[i] == buf[i % 2]:
            continue
        elif i % 2 == 0:
            v1.append(i)
        else:
            v2.append(i)
    ans = 0
    for i in range(0 ,len(v1)):
        M = v2[i] - v1[i]
        if M < 0:
            M = -M
        ans += pow(M ,TP)
    return ans
while t > 0:
    tp = input()
    S = raw_input()
    n = len(S)
    b = 0
    g = 0
    for i in range(0 ,len(S)):
        if S[i] == 'B':
            b = b + 1
        else:
            g = g + 1
    k = possible(n ,b ,g)
    if k == 0:
        print "-1"
        t = t - 1
        continue
    elif k == 2:
        print min( cost(0 ,tp) ,cost(1 ,tp) )
    elif k == 1:
        if b > g:
            print cost(0 ,tp)
        else:
            print cost(1 ,tp)
    t = t - 1
    #print "t = " + str(t)
