#include <bits/stdc++.h>
#define MAXN (200000+3) 
#define MAXM (1003)

using namespace std;

int n, m;
int stamps[MAXN];
int ans[MAXN];
int visited[MAXN];


vector<pair<int ,int> > vec[MAXN];

int dfs(int type , int day) {
   
   int mx = type;
   int sz = vec[type].size();
   visited[type] = 1;
   
   for (int i = 0; i < sz; i++) {
      
      if ( visited[vec[type][i].second] == 0 && vec[type][i].first >= day ) {
         mx = max (mx, dfs(vec[type][i].second , vec[type][i].first)   ) ;
      }
   }
   
   return mx;
}

int main() {
   
   ios_base::sync_with_stdio(false);
   
   int t;
   scanf("%d", &t);
   
   while (t--) {
      int n, m;
      scanf("%d %d ", &n,&m );
      
      for (int i = 0; i < n; i++) {
         scanf("%d", &stamps[i]);
      }
      
      
      for (int i = 0; i < MAXN ; i++) {
         vec[i].clear();
         ans[i] = 0;
         
      }
      
      while ( m-- ) {
         int day, a, b;
         scanf("%d %d %d ", &day, &a, &b);
         
         vec[a].push_back( make_pair (day , b) );
         vec[b].push_back( make_pair (day , a) );
         
      }
      
      long long sum = 0 ;
      for (int i = 0; i < n ; i++) {
         int x = stamps[i];
         
         if (ans[x] != 0 ) {
            sum += ans[x];
         } else {
            
            for (int i = 0; i < MAXN ; i++) {
               visited[i] = 0;
            }
            
            ans[x] = dfs(x, 0 );
            sum += ans[x];
         }
      }
      cout<<sum<<endl;
   }
	return 0;
}
