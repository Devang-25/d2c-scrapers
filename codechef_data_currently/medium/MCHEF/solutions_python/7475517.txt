try:
    xrange
except:
    xrange = range
 
def totalvalue(comb):
    totwt = totval = 0
    for val, wt in comb:
        totwt  += wt
        totval += val
    return (totval, -totwt) if totwt <= max_weight else (0, 0)

def knapsack01_dp(items, limit):
    table = [[0 for w in range(limit + 1)] for j in xrange(len(items) + 1)]
    for j in xrange(1, len(items) + 1):
        val, wt = items[j-1][0], items[j-1][1]
        for w in xrange(1, limit + 1):
            if wt > w:
                table[j][w] = table[j-1][w]
            else:
                table[j][w] = min(table[j-1][w],
                                  table[j-1][w-wt] + val)
    result = []
    w = limit
    for j in range(len(items), 0, -1):
        was_added = table[j][w] != table[j-1][w]
        if was_added:
            val, wt = items[j-1]
            result.append(items[j-1])
            w -= wt
    return result

t = int(raw_input())
for i in range (t):
    n, k, m = raw_input().split()
    max_weight = int(k)
    n, m = int(n), int(m)
    rating = raw_input().split()
    rating = map(int, rating)
    tot = sum(rating)
    wt = [999 for i in range(n)]
    for j in range (m):
        x, y, c = raw_input().split()
        x, y, c = int(x), int(y), int(c)
        for p in range (x-1, y):
            if (c < wt[p]):
                wt[p] = c
    items = []
    for j in range (n):
        items += [[rating[j]] + [wt[j]]]
    items = tuple(items)
    bagged = knapsack01_dp(items, max_weight)
    val, wt = totalvalue(bagged)
    print tot - val
 
