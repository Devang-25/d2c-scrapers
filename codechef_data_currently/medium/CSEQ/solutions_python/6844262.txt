from math import factorial
def choose(n, k, p):
    if 0 <= k < n:
        ntok = 1
        ktok = 1
        """ for t in xrange(1, min(k, n - k) + 1):
            ntok = (ntok*n)%p
            ktok = (ktok*t)%p
            n -= 1
            #print ntok,ktok"""
            
        num = fact[n]
        den = (fact[k]*fact[n-k])%p
        
        ntok = num
        ktok = den
        
        return (ntok * modInverse(ktok, p))%p
    else:
        return 0
    
    
def choose2(n, k, p):
    if 0 <= k <= n:
        ntok = 1
        ktok = 1
        for t in xrange(1, min(k, n - k) + 1):
            ntok = (ntok*n)
            ktok = (ktok*t)
            n -= 1
            #print ntok,ktok
        
        return (ntok / ktok)%p
    else:
        return 0
    
def modpow(n,x,p):
    ans  = 1
    while(x!=0):
        if(x%2 != 0 ):
            ans  = (ans*n)%p
        n = (n*n)%p
        x /=2
        
    return ans  

def modInverse(n,p):
    return modpow(n, p-2, p)

t = int(raw_input())
p = (10**6)+3

fact = {}
fact[0] = 1
for i in range(1,p):
    fact[i] = (fact[i-1]*i)%p
    

while(t):
    ans = 1
    N,L,R = [int(i) for i in raw_input().split()]
    n = R-L+1
    temp = n+N
  
        
    if(temp >= p and n<p ):
        print '0'
    elif(temp >= p and n >=p):
         
        while(n>0 or temp >0):
            n0 = n%p
            temp0 = temp%p
            ans = (ans*choose(temp0, n0, p))%p
            n /= p
            temp /= p
        
        print (ans-1)%p
    else:
       print choose(temp, n, p) -1
             
        
    t -= 1