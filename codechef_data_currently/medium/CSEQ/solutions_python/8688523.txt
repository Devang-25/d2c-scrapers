
from fractions import gcd
# N=int(raw_input())
# for i in range(0,N):
#   n=input()
#    print n+1
#arr=raw_input().split(" ")
#a,b=map(int,raw_input().split())
#for i in range(t):
#P=[int(i) for i in raw_input().split(' ')]

import string
import math



def factorial(n):
    if n==0:
        return 1
    else:
        return n*factorial(n-1)

def f(base,string):
    try:
        return int(str(string),int(base))
    except:
        return None

def solve():
    n=int(input())
    arr=[int(i) for i in raw_input().split(' ')]
    if n==1:
        print "1"
        return None

    ans=int(0)
    len=int(0)
    flag=int(0)

    while(i<n-1):
        len=0
        flag=0

        while (arr[i]<=arr[i+1]):
            len=len+1
            flag=1

        if flag!=0:
            ans=ans+(len+1)*(len+2)/2
            i=i+1

        if arr[i]>arr[i+1]:
             ans=ans+1
             i=i+1

        if arr[i]>arr[i+1] and (i+1)==n-1:
            ans=ans+1

    print ans
    return None





t= int(input())
for t in range(0,t):
    n,l,r=map(int,raw_input().split())
    ans=int(factorial(n+r-l+1)/(factorial(n)*factorial(r-l+1)))-1
    print ans%1000003