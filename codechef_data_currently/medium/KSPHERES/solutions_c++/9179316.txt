#include<bits/stdc++.h>
using namespace std;
#define ma 1000000007
#define ll long long
#define charint(c) ((c)-'0')
#define pii pair< int, int >
#define pb(x) push_back(x)
#define test int t; scanf("%d",&t);while(t--)
#define forall(a,b) for(long long i=a;i<=b;i++)
#define fill(a,b) memset(a,b,sizeof(a))
#define abs(a) ((a)>(0)?(a):(-a))
#define bit(x,i)          (x&(1<<i))  //select the bit of position i of x
#define lowbit(x)         ((x)&((x)^((x)-1))) 
#define higbit(x)         (1 << ( int) log2(x) )
#define countleadzero(x)  __builtin_ctz(x) //in its binary representation ex. when x=8 answer is 3
#define countsetbits(x)   ____builtin_popcount(x) //count no of setbits
#define gcd(a,b)   __gcd(a,b)
int dp[1000][1000];
int main(){
int n,m,d,k;
cin>>n>>m>>d;
int up[1001],lw[1001],ra[1001]={0},arr[1000]={0},kk=0;
for(int i=0;i<n;i++){
	cin>>k;
	up[k]++;
}
for(int j=0;j<m;j++){
	cin>>k;
	lw[k]++;
}
for(int i=0;i<=1000;i++){
	ra[i]=up[i]*lw[i];
	if(ra[i]){
		arr[kk++]=ra[i];
	}
}
for(int i=0;i<kk;i++){
	dp[0][i]=arr[i];
}
for(int i=1;i<=d;i++){
	dp[i][0]=0;
}
for(int i=1;i<=d;i++){
	int sum=0;
	for(int j=1;j<kk;j++){
		dp[i][j]=(dp[i-1][j-1]+dp[i][j-1]/dp[0][j-1])*dp[0][j];
		sum+=dp[i][j];
	}
	cout<<sum<<" ";
}
/*cout<<endl;
for(int i=0;i<=d;i++){
	for(int j=0;j<kk;j++){
		cout<<dp[i][j]<<" ";
	}
	cout<<endl;
}*/
}