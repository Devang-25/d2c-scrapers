import java.util.Scanner;
import java.util.*;
import java.io.*;
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
	    InputReader rr=new InputReader(System.in);
	   // PrintWrite out=new PrintWrite(System.out);
		Scanner ss=new Scanner(System.in);
		int n=rr.readInt();
		int q=rr.readInt();
		//int n=ss.nextInt();
		//int q=ss.nextInt();
	//	ss.nextLine();
		long [][]a=new long[n][2];
		long max1=0,max2=0;
		while(q-->0){
	        String aa=rr.readString();
		   // String s=ss.nextLine();
		    //String aa=s.split(" ")[0];
		    int z=rr.readInt();
		    //int z=Integer.parseInt(s.split(" ")[1]);
		    int x=rr.readInt();
		    //int x=Integer.parseInt(s.split(" ")[2]);
		    z--;
		    if(aa.equals("RowAdd")){
		       // for(int i=0;i<n;i++){
		            a[z][0]+=x;
		            max1=Math.max(max1,a[z][0]);
		        //}
		    }
		    if(aa.equals("ColAdd")){
		        //for(int i=0;i<n;i++){
		            a[z][1]+=x;
		            max2=Math.max(max2,a[z][1]);
		        //}
		    }
		    //max2=Math.max(max1,max2);
		}
		    System.out.println(max2+max1);
	}
}
class InputReader{
	private InputStream stream;
	private byte[] buf = new byte[1024];
	private int curChar;
	private int numChars;
	private SpaceCharFilter filter;
	
	public InputReader(InputStream stream){this.stream = stream;}
	public int read(){
		if (numChars==-1) throw new InputMismatchException();
		if (curChar >= numChars){
			curChar = 0;
			try {numChars = stream.read(buf);}
			catch (IOException e){throw new InputMismatchException();}
			if(numChars <= 0) return -1;
		}
		return buf[curChar++];
	}
 
	public int readInt(){
		int c = read();
		while(isSpaceChar(c)) c = read();
		int sgn = 1;
		if (c == '-') {sgn = -1;c = read();}
		int res = 0;
		do {
			if(c<'0'||c>'9') throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
		}
		while (!isSpaceChar(c)); return res * sgn;
	}
	
	public long readLong() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
        }
		long res = 0;
		do {
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
        }
		while (!isSpaceChar(c));
            return res * sgn;
    }
	
	public double readDouble() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
        }
		double res = 0;
		while (!isSpaceChar(c) && c != '.') {
			if (c == 'e' || c == 'E')
				return res * Math.pow(10, readInt());
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
        }
		if (c == '.') {
			c = read();
			double m = 1;
			while (!isSpaceChar(c)) {
				if (c == 'e' || c == 'E')
					return res * Math.pow(10, readInt());
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				m /= 10;
				res += (c - '0') * m;
				c = read();
            }
        }
		return res * sgn;
    }
	
	public String readString() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = read();
		} while (!isSpaceChar(c));
		return res.toString();
	}
 
	public boolean isSpaceChar(int c) {
		if (filter != null)
			return filter.isSpaceChar(c);
		return c == ' ' || c == '
' || c == '' || c == '	' || c == -1;
		}
 
	public String next() {
		return readString();
	}
	
	public interface SpaceCharFilter {
		public boolean isSpaceChar(int ch);
	}
	
}  