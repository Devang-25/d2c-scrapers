//#pragma comment(linker, "/STACK:1024000000,1024000000")  

#include <iostream>  
#include <cstring>  
#include <cmath>  
#include <queue>  
#include <stack>  
#include <map>  
#include <set>  
#include <string>  
#include <vector>  
#include <cstdio>  
#include <ctime>  
#include <bitset>  
#include <algorithm>  
#define SZ(x) ((int)(x).size())  
#define ALL(v) (v).begin(), (v).end()  
#define foreach(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++ i)  
#define reveach(i, v) for (__typeof((v).rbegin()) i = (v).rbegin(); i != (v).rend(); ++ i)  
#define REP(i,n) for ( int i=1; i<=int(n); i++ )  
#define rep(i,n) for ( int i=0; i< int(n); i++ )  
using namespace std;  
typedef long long ll;  
#define X first  
#define Y second  
#define PB push_back  
#define MP make_pair  
typedef double ld;
typedef pair<ll, ll> pii;  
  
template <class T>  
inline bool RD(T &ret) {  
        char c; int sgn;  
        if (c = getchar(), c == EOF) return 0;  
        while (c != '-' && (c<'0' || c>'9')) c = getchar();  
        sgn = (c == '-') ? -1 : 1 , ret = (c == '-') ? 0 : (c - '0');  
        while (c = getchar(), c >= '0'&&c <= '9') ret = ret * 10 + (c - '0');  
        ret *= sgn;  
        return 1;  
}  
template <class T>  
inline void PT(T x) {  
        if (x < 0) putchar('-') ,x = -x;  
        if (x > 9) PT(x / 10);  
        putchar(x % 10 + '0');
}
 
const int N = 1e3 + 10;
const long double maxn = 1e18;
pair<double, double> dp[N][N];
pii a[N][N]; // cnt, money
int main() {
	memset(dp, 0, sizeof(dp));
	int n, m;
	ll D;
	RD(n), RD(m), RD(D);
	REP(j, n) REP(i, m) RD(a[i][j].X), RD(a[i][j].Y);
	ld ans = 0;
	REP(i, n) 
		dp[0][i] = pair<ld, ld>((ld) D, (ld)0) ;
	ld ma = 0;
	for(int i = 1; i <= m; i ++) 
		for(int j = 1; j <= n; j ++) {
			dp[i][j].X = max( (dp[i - 1][j].X, dp[i - 1][j].Y * a[i][j].Y), max(dp[i - 1][j - 1].X, dp[i - 1][j + 1].X) );
			dp[i][j].Y = max( (dp[i - 1][j].Y, dp[i - 1][j].X / a[i][j].X), max(dp[i - 1][j - 1].Y, dp[i - 1][j + 1].Y) );
			if(dp[i][j].X > maxn || dp[i][j].Y > maxn) {
				puts("Quintillionnaire");
				return 0;
			}
		}
	REP(i, n) ans = max(ans, dp[m][i].X);
	printf("%.12lf
", ans);
	
}
 
