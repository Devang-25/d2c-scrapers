using namespace std;
#include<bits/stdc++.h>
//#define getchar_unlocked() getchar()
int val[4][1000010];
vector <int> a[4];
char str[1000010];
inline int inp()
{
    register long long r=0,c;
    for(c=getchar_unlocked(); c<=32; c=getchar_unlocked());
    if(c=='-')
        return -inp();
    for(; c>32; r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
    return r;
}
inline char inp1()
{
    register char r=0,c;
    for(c=getchar_unlocked(); c<=32; c=getchar_unlocked());
    if(c=='-')
        return -inp();
    for(; c>32; r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
    return r;
}
int value(char ch)
{
	switch(ch)
	{
		case 'c':
		return 0;
		case 'h':
		return 1;
		case 'e':
		return 2;
		case 'f':
		return 3;
	}
}
int main()
{
	scanf("%s",str);
	int m;
	m=inp();
	int n=strlen(str);
	//cout<<n;
	int j;
	int i;

	for(i=0;i<4;i++)
		for(j=0;j<n;j++)
		val[i][j]=0;
	char ch=str[0];
	//cout<<ch<<endl;
	j=value(str[0]);
	a[j].push_back(0);
	//cout<<j<<endl;
	val[j][0]=1;
	for(i=1;i<n;i++)
	{
		j=value(str[i]);
		val[j][i]=1;
		a[j].push_back(i);
		val[0][i]+=val[0][i-1];
		val[1][i]+=val[1][i-1];
		val[2][i]+=val[2][i-1];
		val[3][i]+=val[3][i-1];
	}
	vector<int>::iterator it;
	char ch1,ch2;
	int l,r;
	int sum=0,p;

	while(m--)
	{
		//h
		/*scanf("%c %c %d %d",&ch1,&ch2,&l,&r);
		scanf("%c
",&ch1);
		scanf("%c
",&ch2);
		scanf("%d
",&l);
		scanf("%d
",&r);*/
		ch1=getchar();
		ch=getchar();
		ch2=getchar();
		ch=getchar();
		l=inp();
		r=inp();
		//cout<<ch1<<" "<<ch2<<endl;
		//printf("%d %d
",l,r);
		//scanf("%c",&ch2);
		//cin>>ch2;
		//ch=getchar();
		j=value(ch1);
		p=value(ch2);
		sum=0;
		for(it=a[j].begin();it!=a[j].end();++it)
		{
		//cout<<*it<<" ";
			if((*it) >=l-1 && (*it) <=r-1 )
			{
			//cout<<val[p][r-1]-val[p][*it]<<endl;
				sum+=val[p][r-1]-val[p][*it];
			}
		}
		printf("%d
",sum);
		}
		return 0;
		}
