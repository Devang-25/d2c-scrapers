#include<iostream>
#include<string>
#include<vector>
#include<time.h>
#include<math.h>
#include<stdlib.h>
#include<algorithm>
using namespace std;

struct Node{
	string s;
	long long  n;
};


int main(){
	vector<Node> v;
	string x;
	long long T;
	cin>>T;
	int N;
	long long y;
	int i,j;
while(T--){
	cin>>N;
	v.resize(N+2);
	for(i=1;i<=N;i++){
//		cin>>x;
//		cin>>y;
//		Node temp;
//		temp.s=x;
//		temp.n=y;
//		v[i]=temp;
		cin>>v[i].s;
		cin>>v[i].n;
	}
	for(j=N;j>1;j--)
		for(i=0;i<j;i++)
			if(v[i].n>v[i+1].n){
				Node t;
				t=v[i];
				v[i]=v[i+1];
				v[i+1]=t;
			}
	long long ans=-1;
	v[0].n=-1;
	v[N+1].n=-1;
//	long long data,l,r;
//	for(i=0;i<v.size();i++){
//		data=v[i].n;
//		if(i==0)            //boundary conditions
//			l=-1;
//		else
//			l=v[i-1].n;
//		if(i==v.size()-1)
//			r=-1;
//		else
//			r=v[i+1].n;	
//		
//		if(data==r)			//actual comparisions
//			i++;
//		else if(data!=l){
//			ans=data;
//			break;
//		}
//	}
	for(i=1;i<=N;i++){
		if(v[i].n==v[i+1].n)
			i++;
		else if(v[i].n!=v[i-1].n){
			ans=v[i].n;
			break;
		}
	}
	if(ans==-1)
		cout<<"Nobody wins
";
	else{
		for(i=1;i<=N;i++)
			if(v[i].n==ans){
				cout<<v[i].s<<endl;
				break;
			}
	}
	v.clear();
}
	
	return 0;
}