#include<algorithm>
#include<bitset>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<deque>
#include<fstream>
#include<iostream>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<utility>
#include<vector>

using namespace std;

#define dbg(x) (cout<<#x<<" = "<<(x)<<'
')
const string problemName = "data";
const string inputFile = problemName + ".in";
const string outputFile = problemName + ".out";

typedef long long int lld;
typedef pair<int, int> PII;

const int INF = (1LL << 31) - 1;
const lld LINF = (1LL << 62) - 1;
const int CMAX = 200000 + 5;

int T, M, top, sol;
lld N;
lld D[CMAX];
lld a, b, c, d;

inline int sum(lld n) {
    a = n % (30 * M);
    b = (n + 1) % (30 * M);
    c = (2 * n + 1) % (30 * M);
    d = (3 * n) % (30 * M);
    d = (d * n) % (30 * M);
    d = (d + 3 * n - 1) % (30 * M);
    a = (a * b) % (30 * M);
    c = (c * d) % (30 * M);
    a = (a * c) % (30 * M);
    a /= 30;
    return a % M;
}

inline int segment(lld a, lld b) {
    return (sum(b) - sum(a) + M) % M;
}

int main() {
    lld a, b;
    int i;

#ifndef ONLINE_JUDGE
    freopen(inputFile.c_str(), "r", stdin);
    freopen(outputFile.c_str(), "w", stdout);
#endif

    cin.sync_with_stdio(false);
    cin.tie(false);

    cin >> T;

    while(T--) {
        cin >> N >> M;

        sol = 0;
        top = 0;
        D[++top] = N;

        for(a = 1; a * a <= N; a++) {
            D[++top] = a;
            D[++top] = N / (a + 1);
        }

        sort(D + 1, D + top + 1);

        a = N + 2;

        for(i = 0; i <= top; i++) {
            b = D[i];
            if(b)
                sol = (sol + segment(a, b) * (N / b)) % M;
            a = b;
        }

        cout << sol << '
';
    }

    return 0;
}
