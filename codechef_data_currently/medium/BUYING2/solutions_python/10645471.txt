#include<stdio.h>
void part(int arr[],int min,int max)
{
 int mid;
 if(min<max)
 {
   mid=(min+max)/2;
   part(arr,min,mid);
   part(arr,mid+1,max);
   merge(arr,min,mid,max);
 }
}


void merge(int arr[],int min,int mid,int max)
{
  int tmp[101];
  int i,j,k,m; 
  j=min;
  m=mid+1;
  for(i=min; j<=mid && m<=max ; i++)
  {
     if(arr[j]>=arr[m])
     {
         tmp[i]=arr[j];
         j++;
     }
     else
     {
         tmp[i]=arr[m];
         m++;
     }
  }
  if(j>mid)
  {
     for(k=m; k<=max; k++)
     {
         tmp[i]=arr[k];
         i++;
     }
  }
  else
  {
     for(k=j; k<=mid; k++)
     {
        tmp[i]=arr[k];
        i++;
     }
  }
  for(k=min; k<=max; k++)
     arr[k]=tmp[k];
}

int main()
{
	int T,i,j,a,N,X;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d %d",&N,&X);
		int Arr[N+1],Sum=0;
		for(i=0;i<N;i++)
		{
			scanf("%d",&a);
			Sum+=a;
			Arr[i]=a;
		}
		part(Arr,0,N-1);
		int pos_sweet=Sum/X;
		int j=N-1;
		if((Sum-Arr[j])/X==pos_sweet)
			printf("-1
");
		else
			printf("%d
",pos_sweet);
	}
	return 0;
}