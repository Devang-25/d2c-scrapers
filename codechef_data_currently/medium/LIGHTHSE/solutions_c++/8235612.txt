#include <bits/stdc++.h>
using namespace std;

#define R(i,a,b) for(int i=a;i<b;i++)
#define RE(i,a,b) for(int i=a;i<=b;i++)
#define RR(i,a,b) for(int i=a;i>b;i--)
#define RRE(i,a,b) for(int i=a;i>=b;i--)
#define F(i,n) for(int i=0;i<n;i++)
#define FE(i,n) for(int i=0;i<=n;i++)
#define FR(i,n) for(int i=n;i>0;i--)
#define FRE(i,n) for(int i=n;i>=0;i--)
#define mp(a,b) make_pair(a,b)
#define pii pair <int, int>
#define pb push_back
#define ft first
#define sd second
#define LL long long
#define gc getchar_unlocked
#define pc putchar_unlocked

inline void get(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

struct lt
{
	int x,y;
	int idx;
}a[100005], b[100005];

bool xcmp(struct lt x, struct lt y)
{
	return x.x < y.x;
}

bool ycmp(struct lt x, struct lt y)
{
	return x.y < y.y;
}

int main()
{
	int T;
	get(T);
	for (int __rep = 1; __rep <=T; __rep++)
	{
		int n;
		get(n);
		// int ymax, ymin;
		// int xmax, xmin;
		// int ixmax, ixmin;
		// int iymax, iymin;
		// int yxmax, yxmin;
		// ymax = xmax = ixmax = iymax = yxmax = -1000000008;
		// ymin = xmin = ixmin = iymin = yxmin = 1000000008;
		F(i,n)
		{
			get(a[i].x);
			get(a[i].y);
			a[i].idx = i+1;
			b[i].x = a[i].x;
			b[i].y = a[i].y;
			b[i].idx = a[i].idx;
			// if (xmax < x)
			// {
			// 	xmax = x;
			// 	yxmax = y;
			// 	ixmax = i;
			// }
			// if (xmin > x)
			// {
			// 	xmin = x;
			// 	yxmin = y;
			// 	ixmin = i;
			// }
			// if (ymax < y)
			// {
			// 	ymax = y;
			// 	iymax = i;
			// }
			// if (ymin > y)
			// {
			// 	ymin = y;
			// 	iymin = i;
			// }
		}	

		sort(a,a+n,xcmp);
		sort(b,b+n,ycmp);

		if (a[n-1].y == b[n-1].y)
			cout << "1
" << a[n-1].idx << " SW
"; 
		else if (a[n-1].y == b[0].y)
			cout << "1
" << a[n-1].idx << " NW
";
		else if (a[0].y == b[n-1].y)
			cout << "1
" << a[0].idx << " SE
";
		else if (a[0].y == b[0].y)
			cout << "1
" << a[0].idx << " NE
";
		else
		{
			if (a[n-1].y > a[0].y)
				cout << "2
" << a[n-1].idx << " SW
" << a[0].idx << " NE
";
			else
				cout << "2
" << a[n-1].idx << " NW
" << a[0].idx << " SE
";
		}
	}
	return 0;
}