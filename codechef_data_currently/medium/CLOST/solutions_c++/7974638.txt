#include<bits/stdc++.h>
#define FRU freopen("out.txt","w",stdout)
#define FRO freopen("in.txt","r",stdin)
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(ara,n) memset(ara,n,sizeof ara)
#define loop(i,j,n) for(i=j;i<n;i++)
#define rloop(i,j,n) for(i=n;i>=j;i--)
#define INF 2147483647
#define long long long
//const int row[]={-1, -1, -1,  0,  0,  1,  1,  1};  // Kings Move
//const int col[]={-1,  0,  1, -1,  1, -1,  0,  1};  // Kings Move
//const int row[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int col[]={-1,  1, -2,  2, -2,  2, -1,  1};  // Knights Move
//const int row[]={-1,0,0,1,0};
//const int col[]={0,-1,1,0,0};
int gcd(int a,int b)
{
    return b==0?a:gcd(b,a%b);
}
int lcm(int a,int b)
{
    return ((a*b)/gcd(a,b));
}


using namespace std;
struct data
{
    int a,b,c;
}ara[100001];

bool cmp(data a,data b)
{
    return a.c<b.c;
}

int main()
{
//FRO;
//FRU;
//std::ios_base::sync_with_stdio(false);
    int a,b,c,i,j,k,tc,t;
    int n,m,cnt=0;
    char s[100005];
    scanf("%d",&tc);
    for(t=1; t<=tc; t++)
    {
        scanf("%d%d",&n,&m);
        for(i=0; i<n; i++)s[i]='.';
        for(i=0; i<m; i++)
        {
            scanf("%d%d",&a,&b);
            ara[i].a=a;
            ara[i].b=b;
            ara[i].c=(b-a)+1;
            //s[a]='(',s[b]=')';
            /*int flg=0;
            for(j=a; j<=b; j++)
            {
                if(s[j]=='.')
                {
                    //printf("%c",s[i]);
                    if(flg==0)
                    {
                        s[j]='(';
                        flg=1;
                    }
                    else if(flg==1)
                    {
                        s[j]=')';
                        flg=0;
                    }
                }
            }*/
        }
        sort(ara,ara+m,cmp);
        int flg=0;
        a=b=0;
        for(i=0;i<m;i++)
        {a=b=0;
            for(j=ara[i].a;j<=ara[i].b;j++)
            {//printf("sdff
");
                if(s[j]=='.')
                {
                    if(a<=b)
                    {
                        s[j]='(';
                        a++;
                    }
                    else
                    {
                        s[j]=')';
                        b++;
                    }
                }
                else if(s[j]=='(')a++;
                else if(s[j]==')')b++;
            }
        }
        for(i=0;i<n;i++)if(s[i]=='.')s[i]='(';
        printf("%s
",s);
    }
    return 0;
}
