#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<set>
#include<queue>
#include<stack>
#include<algorithm>
#include<cmath>
#include<map>
#include<string>
#define mod 1000000007
#define lli long long int
using namespace std;
vector<lli> F(5001 , 1);
vector<lli> INV(5001 , 1);
long long power(lli a, lli b, lli MOD)
{
	long long x=1,y=a;
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>MOD) x%=MOD;
		}
		y = (y*y);
		if(y>MOD) y%=MOD;
		b /= 2;
	}
	return x;
}

long long Euler(lli n, lli MOD)
{
	return power(n,MOD-2,MOD);
}

long long C(int n, int r, lli MOD)
{
	return (F[n]*((INV[r] * INV[n-r])% MOD)) % MOD;
}
int main()
{
	int t,n,q;
	cin>>t;
	while(t--)
	{
		cin>>n>>q;
		string str,temp;
		cin>>str;
		vector<lli> count(n+1,0);
		priority_queue<string> pq;
		for(int i=0;i<str.length();i++)
		{
			temp=str.substr(i,n-i);
			pq.push(temp);
		}
		vector<string> pqa(n);
		for(int i=n-1;!pq.empty();i--)
		{
			pqa[i]=pq.top();
			pq.pop();
		}
		string l1,l2;
		l1=pqa[0];
		vector<lli> lcp(n+1,0);
		vector<lli> v1(n+1,1);
		count[1]+=l1.length();
		lli maxi=1;
		for(int i=1;i<n;i++)
		{
			l1=pqa[i-1];l2=pqa[i];
			lcp[i]=0;
			for(int j=0;j<l1.length() && j<l2.length();j++)
			{
				if(l1.at(j)==l2.at(j))
				{
					lcp[i]++;
				}
				else
				break;
			}
			count[1]+=l2.length()-lcp[i];
			if(lcp[i]==0)
			v1.assign(n+1,1);
			else if(lcp[i]>=lcp[i-1])
			{
				for(int j=0;j<lcp[i];j++)
				{
					count[v1[j]]--;
					v1[j]++;
					count[v1[j]]++;
					if(maxi<v1[j])
					maxi=v1[j];
				}
			}
			else if(lcp[i]<lcp[i-1])
			{
				for(int j=0;j<lcp[i];j++)
				{
					count[v1[j]]--;
					v1[j]++;
					count[v1[j]]++;
					if(maxi<v1[j])
					maxi=v1[j];
				}
				for(int j=lcp[i];j<lcp[i-1];j++)
				{
					v1[j]=1;
				}
			}
		}

		for (int i=2; i<=maxi;i++)
		F[i]= (F[i-1]*i) % mod;

		for(int i=2;i<=maxi;i++)
		{
			INV[i]=Euler(F[i],mod);
		}

		vector<lli> result(maxi+1,0);
		for(int i=1;i<=maxi;i++)
		{
			lli po=0;
			for(int j=maxi;j>=i;j--)
			{
				po=po+C(j,i,mod)*count[j];
				if(po>mod)
				po%=mod;
			}
			result[i]=po;
		}
		lli y;
		for(int i=0;i<q;i++)
		{
			cin>>y;
			if(y>maxi)
			{
				cout<<"0
";
			}
			else
			{
				cout<<result[y]<<"
";
			}
		}
	}
}
