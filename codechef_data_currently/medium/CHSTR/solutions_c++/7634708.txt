#include <iostream>
#include <string>
#include <vector>
#include <stdio.h>
#include <algorithm>
using namespace std;

int nChoosek( int n, int k )
{
    if (k > n) return 0;
    if (k * 2 > n) k = n-k;
    if (k == 0) return 1;
    if(k==n-1) return n;
    int result = n;
    for( int i = 2; i <= k; ++i ) {
        result *= (n-i+1);
        result /= i;
    }
    return result;
}

int main() {
    int t,n,q,sum,l,i,j,ways,query;
    string s;
    scanf("%d",&t);
    while(t--){
        scanf("%d %d", &n, &q);
        cin >> s;
        l=n;
        sum=l*(l+1)/2;
        //array of strings for storing substrings
        vector<string> sb(sum);
        int p=0;
        //loop to store all the substrings
        for(i=0;i<l;++i)
            for(j=1;j<l-i+1;++j)
                sb[p++]=s.substr(i,j);
        //sort substring array in lexicographic order
        sort(sb.begin(),sb.end());
        //array and loop to store frequency
        vector<int> frequency;
        for(i=0;i<sum;){
            for(j=i+1; i+1<sum && sb[j].compare(sb[i])==0; ++j);
            frequency.push_back(j-i);
            i=j;
        }
        //frequency sorted
        //sort(frequency.begin(),frequency.end());
        //final answer calculation loop
        for(j=0;j<q;++j){
            ways=0;
            cin >> query;
            for(i=0; i<frequency.size(); ++i)
                    ways += nChoosek( frequency[i], query);
            cout << ways << endl;
        }
    }
    return 0;
}
