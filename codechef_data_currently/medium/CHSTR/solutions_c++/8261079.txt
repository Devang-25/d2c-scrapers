#include <iostream>
#include <cstdio>
#include <string>
 
using namespace std;
 
# define MAX 200 // assuming we need first 5000 rows
 
unsigned long long triangle[5000 + 1][5000 + 1]={};
 
void makeTriangle() {
    int i, j;
 
    // initialize the first row
    triangle[0][0] = 1; // C(0, 0) = 1
 
    for(i = 1; i < MAX; i++) {
        triangle[i][0] = 1; // C(i, 0) = 1
        for(j = 1; j <= i; j++) {
            triangle[i][j] = (triangle[i - 1][j - 1] + triangle[i - 1][j])%1000000007;
        }
    }
}
 
unsigned long long C(int x, int r) {
    if(triangle[x][r]!=0)return triangle[x][r];
	else{
		if(r>x) return 0;
		if(r>x/2){r=x-r;}
		if(r==0) return 1;
		if(r==1) return x;
		triangle[x][r]=(C(x-1,r)+C(x-1,r-1))%1000000007;
		return triangle[x][r]; 
		}
}
 
int n,q;
string s;
 
string sub[5000]={};
string xsub[5000]={};
int xlen;
unsigned long long freq[5000]={};
 
void substr(int x);
void xsubstr(int x);
int maxfreq();
//unsigned long long int C(unsigned long long int x,unsigned long long int r);
 
 
int main(){
 
	makeTriangle();
	int t;
	cin>>t;
	for(int z=0;z<t;z++)
	{
		//cout<<C(50,10)<<endl;
		cin>>n>>q;
		cin>>s;int op=n*(n+1)/2;
 
		unsigned long long int* k;k  = new unsigned long long int[2*q+10];
		unsigned long long int* out;out= new unsigned long long int[2*q+10];
		unsigned long long int* r;r  = new unsigned long long int[2*q];
		unsigned long long int* way;way  = new unsigned long long int[n+10];
 
		bool hm[5001]={};
		bool re[5001]={};
		int rr=0;
 
		substr(1);
		xsubstr(1);
		int mx;mx=maxfreq();
 
		for(int i=0;i<q;i++)
		{
			r[i]=0;
		//	cin>>k[i];
			scanf("%llu",&k[i]);
			if(k[i]==1){	out[i]=op;	}
			else if(k[i]>mx){	out[i]=0;	}
			else{	out[i]=0;	if(!hm[k[i]]){	r[rr]=i; rr++;	hm[k[i]]=true; way[k[i]]=i;	}else{	re[k[i]]=true;out[i]=out[way[k[i]]];	}	}
 
			//function(k[i]);
		}//cout<<rr<<"
";//cout<<rr<<" "<<r[0]<<" "<<r[1]<<" "<<r[2]<<"
";
 
		bool stop [5001]={};
		for(int i=1;i<=n;i++)
		{
			if(i>1)
			{substr(i);
			xsubstr(i);
			mx=maxfreq();}
 
			for(int j=0;j<xlen;j++)
			{
			//	cout<<xlen<<" . "<<xsub[j]<<" "<<freq[j]<<endl;
				for(int w=0;w<rr;w++)
				{	
					if(stop[k[r[w]]]){ continue; }
					if(k[r[w]]>mx){ stop[k[r[w]]]=true;continue; }
					out[r[w]]=(out[r[w]]+C(freq[j],k[r[w]]))%1000000007;
				}
			}
		}//cout<<out[1]<<"
";
 
		for(int i=0;i<q;i++)
		{
			if(k[i]<=n&&re[k[i]]){	out[i]=out[way[k[i]]];	}
		}
		for(int w=0;w<q;w++)
		{
		//	cout<<ways[k[w]]<<endl;
			printf("%llu
",out[w]);
		}
 
		delete[] out;
		delete[] k;
		delete[] r;
		for(int i=0;i<=n;i++)
		{
			sub[i]="";
		}
	}
 
	return 0;
}
 
void substr(int x)
{
	for(int i=0;i<=n-x;i++)
	{
		sub[i]=sub[i]+""+s.at(i+x-1);
//		cout<<sub[i]<<" ... ";
	}
//	cout<<n+1-x<<endl;
}
 
void xsubstr(int x)
{
	bool flag=false;
	xlen=0;
	for(int i=0;i<=n-x;i++)
	{
	//	xsub[i]="";
		freq[i]=0;
	}
 
	for(int i=0;i<=n-x;i++)
	{//cout<<sub[i]<<" ... ";
		for(int j=0;j<xlen;j++)
		{
			if(sub[i]==xsub[j])
			{
				freq[j]++;
				flag=true;
			}
		}
		if(!flag)
		{//	cout<<sub[i]<<" ... ";
			xsub[xlen]=sub[i];
			freq[xlen]++;
			xlen++;//cout<<xlen;
		}
		flag=false;
	//	cout<<endl;
	}
}
 
//unsigned long long int C(unsigned long long int x,unsigned long long int r)
//{
//	if(r>x) return 0;
//	if(r>x/2){r=x-r;}
//	if(r==0) return 1;
//	if(r==1) return x;
//	return (x*(C(x-1,r-1))/r)%1000000007;
//}  
 
int maxfreq()
{
	int max=freq[0];
	for(int i=1;i<xlen;i++)
	{
		if(freq[i]>max)max=freq[i];
	}
	return max;
} 