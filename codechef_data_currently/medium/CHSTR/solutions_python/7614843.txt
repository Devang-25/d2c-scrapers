
def getAllSubstrings(input):
    subs={}
    for length in range(1,len(input)+1):
        for index in range(0,len(input)-length+1):
            str=input[index:index+length]
            if subs.has_key(str):
                subs[str]=subs[str]+1
            else:
                subs[str]=1

    return subs




def comb(N,k): # from scipy.comb(), but MODIFIED!
    if (k > N) or (N < 0) or (k < 0):
        return 0L
    N,k = map(long,(N,k))
    top = N
    val = 1L
    while (top > (N-k)):
        val =(val*top)%(1000000000+7)
        top -= 1
    n = 1L
    while (n < k+1L):
        val /= n
        n += 1
    return val



test=input();
while(test>0):
    n,q=[int(x) for x in raw_input().split()]
    s=raw_input();
    allSub=getAllSubstrings(s)
    for i in range(0,q):
        question=(int)(raw_input())
        answer=0
        for key,value in allSub.items():
            if(value>question):
                answer=(answer+comb(value,question))%(1000000000+7);
            elif(value==question):
                answer=(answer+1)%(1000000000+7)

        print answer

    test=test-1;

