fact=[1,1,2,6]
length = 4
MOD = int(10e9+7)
def main():
    t = input()
    global length,fact
    for itr in xrange(t):
        len_str, num_of_q = map(int,raw_input().split())
        if length <= len_str:
            fact.extend([1]*(len_str-length+1))
            for x in xrange(length,len_str+1):
                fact[x] = (fact[x-1]*x)%MOD
            length = len_str+1
        key_value = {}
        string = raw_input()
        for i in xrange(1,len_str+1):
            for j in xrange(len_str-i+1):
                try :
                    key_value[string[j:i+j]] += 1
                except :
                    key_value[string[j:i+j]] = 1
        lisp = key_value.values()
        lisp.sort(reverse = True)
        list_length = len(lisp)
        answer={}
        for x in xrange(num_of_q):
            result=0
            l = input()
            j = 0;
            try :
                print answer[l]
            except:
                while( j < list_length and lisp[j] >= l):
                    result += ((fact[lisp[j]]/(fact[l]*fact[lisp[j]-l]))%MOD)
                    j+=1
                answer[l] = result
                print result

main()