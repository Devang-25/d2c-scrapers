#include<iostream>
#include<stdio.h>
#include<string>
#include<string.h>
#include<algorithm>
#include<cmath>
 
using namespace std;

unsigned long long int* multiply(unsigned long long int A[], unsigned long long int i) {
	unsigned long long int *ans, carry;
	ans = new unsigned long long int[4];	

	ans[3] = (A[3] * i)%10000;
	carry = (A[3]*i)/10000;

	ans[2] = (A[2] * i + carry)%10000;
	carry = (A[2] * i + carry)/10000;

	ans[1] = (A[1] * i + carry)%10000;
	carry = (A[1] * i + carry)/10000;

	ans[0] = (A[0] * i + carry);

	return ans;	
}

unsigned long long int* add(unsigned long long int A[], unsigned long long int B[]) {
	unsigned long long int *ans, carry;
	ans = new unsigned long long int[4];

	ans[3] = (A[3] + B[3])%10000;
	carry = (A[3] + B[3])/10000;

	ans[2] = (A[2] + B[2] + carry)%10000;
	carry = (A[2] + B[2] + carry)/10000;

	ans[1] = (A[1] + B[1] + carry)%10000;
	carry = (A[1] + B[1] + carry)/10000;

	ans[0] = (A[0] + B[0] + carry);

	return ans;
}


int main() {
	int T, N, temp;
	cin>>T;

	while(T--) {
		cin>>N;
		temp = N;
			
		unsigned long long int n[4], *Ans;
		int i;
		for(i=0; i<4; ++i)
			n[i] = 0;
		
		i = 3;
		while(i>=0) {
			n[i] = N%10000;
			N=N/10000;
			--i;
		}
		
		N = temp;
		
		if(N==1) {
			cout<<0<<endl;
			continue;
		}

		if(N > 1)
			Ans = multiply(multiply(multiply(n, 2), N-1), N-1);

		if(N > 2) 
			Ans = add(Ans, (add(multiply(multiply(n, N-1), N-2), multiply(multiply(multiply(multiply(n, 2), N-1), N-2), N-2))));

		int f = 0;
		for(i=0; i<4; ++i) {
			if((Ans[i] == 0) && (f==0))
				continue;
			else if((Ans[i] == 0) && (f!=0)) 
				cout<<"0000";
			else if((Ans[i]!=0) && (f==0)) {
				cout<<Ans[i];
				f=1;
				continue;
			}
			else if((Ans[i]!=0) && (f==1)) {
				if(Ans[i]<10)
					cout<<"000"<<Ans[i];
				else if(Ans[i]<100)
					cout<<"00"<<Ans[i];
				else if(Ans[i]<1000)
					cout<<"0"<<Ans[i];
				else
					cout<<Ans[i];
			}
		}
		cout<<endl;
	}
}
