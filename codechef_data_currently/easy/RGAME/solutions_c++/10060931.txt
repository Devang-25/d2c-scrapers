#include <iostream>

using namespace std;
const unsigned long mod = 1000000007;

unsigned long long ModPow(int x, int n)
{
    unsigned long long p= 1;
    int i;
    for(i=0; i<n; i++)
    {
        p*=x;
        if (p >= mod)
            p=p%mod;
    }
    return p;
}
unsigned long long ModProd(unsigned long long a, unsigned long long b)
{
    return (a*b < mod ? a*b : a*b % mod);
}

unsigned long ModSum(unsigned long long a, unsigned long long b)
{
    return (a+b < mod ? a+b : (a+b) % mod);
}

int main()
{
    unsigned int loop, t, i, j;
    unsigned long long n;
    unsigned long long  *a, kij, k0j, ans;
    cin >> t;
    for (loop=0; loop<t; loop++)
    {
        ans = 0;
        cin >> n;
        a = new unsigned long long[n+1];
        cin >> a[0];
        for(i=1; i<=n; i++)
        {
            cin >> a[i];
            k0j  = ModPow(2,n-i+1);
            //ans+= k0j*a[0]*a[i];
            ans = ModSum(ans , ModProd(ModProd(k0j,a[0]) , a[i]));
        }
        for(i=1 ; i<=n; i++)
        {
            for (j=i+1; j<=n; j++)
            {
            kij  = ModPow(2,n-j+i);
            //ans+= kij*a[i]*a[j];
            ans = ModSum (ans , ModProd(ModProd(kij,a[i]) , a[j]));
            }
        }
        //if (ans >= mod)
        //    ans = ans % mod;

        cout << ans << endl;

    }

    return 0;

}
