# cook your code here
#O(n2)
# from math import sqrt
def minsort(l,n,k):
    for i in range(k):
        for j in range(n-i-1):
            if l[j]<l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]  #swapping
    l=l[::-1]   # to get smallest elements in front
    for i in range(k):
        for j in range(n-i-1):
            if l[j]>l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]  #swapping
    # got biggest element at last
    return l
t=int(raw_input())
for i in range(t):
    # lg = int(raw_input())
    n,k = map(int,raw_input().split())
    l = map(int,raw_input().split())
    l= minsort(l,n,k)
    sum = float(0)
    for i in range(k,n-k):
        sum += l[i]
    print '{:.6f}'.format(sum/(n-2*k))
    