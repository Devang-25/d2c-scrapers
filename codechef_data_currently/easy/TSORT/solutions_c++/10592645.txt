#include<bits/stdc++.h>
using namespace std;
class MaxHeap
{
    int* arr;
    int n;

public:
    MaxHeap(int arr[], int n)
    {
        this->arr = arr;
        this->n = n;
        for(int i = n/2; i>=1; i--)
            max_heapify(i);
    }
    void max_heapify(int i)
    {
        int l = 2*i;
        int r = 2*i + 1;

        int largest = i;
        if(l<=n && arr[l]>arr[largest])
            largest = l;
        if(r<=n && arr[r]>arr[largest])
            largest = r;
        if(largest !=i)
        {
            swap(arr[i],arr[largest]);
            max_heapify(largest);
        }
    }
    void display()
    {
        for(int i = 1; i<=n; i++)
            cout << arr[i]  << "
";
        //cout << "
";
    }
    void heapsort()
    {
        int n_ = n;
        for(int i = n; i>1; i--)
        {
            swap(arr[i],arr[1]);
            n--;
            max_heapify(1);
        }
        n = n_;
    }
};
int arr[10000001];
int main()
{
   // freopen("out.txt","r",stdin);
    //freopen("heap_sorted.txt","w",stdout);
    int n;
    cin >> n;

    for(int i = 1; i<=n ;i++)
        cin >> arr[i];
    MaxHeap mh(arr,n);
    mh.heapsort();
    mh.display();
    return 0;
}
